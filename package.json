{
  "name": "@mistio/landing",
  "version": "3.0.0",
  "resolutions": {
    "inherits": "2.0.3",
    "samsam": "1.1.3",
    "supports-color": "3.1.2",
    "type-detect": "1.0.0"
  },
  "contributors": [
    "Dimitris Moraitis",
    "Christina Papakonstantinou"
  ],
  "dependencies": {
    "@fingerprintjs/fingerprintjs": "^3.0.1",
    "@mistio/mist-password": "^2.0.1",
    "@polymer/app-layout": "^3.0.0",
    "@polymer/app-route": "^3.0.0",
    "@polymer/app-storage": "^3.0.3",
    "@polymer/gold-cc-cvc-input": "^3.0.0",
    "@polymer/gold-cc-input": "^3.0.0",
    "@polymer/gold-phone-input": "^3.0.0",
    "@polymer/gold-zip-input": "^3.0.0",
    "@polymer/iron-ajax": "^3.0.1",
    "@polymer/iron-flex-layout": "^3.0.0",
    "@polymer/iron-form": "^3.0.0",
    "@polymer/iron-icon": "^3.0.0",
    "@polymer/iron-icons": "^3.0.1",
    "@polymer/iron-iconset-svg": "^3.0.0",
    "@polymer/iron-image": "^3.0.0",
    "@polymer/iron-media-query": "^3.0.0",
    "@polymer/iron-meta": "^3.0.1",
    "@polymer/iron-overlay-behavior": "^3.0.3",
    "@polymer/iron-pages": "^3.0.0",
    "@polymer/iron-selector": "^3.0.0",
    "@polymer/marked-element": "^3.0.0",
    "@polymer/neon-animation": "^3.0.0",
    "@polymer/paper-button": "^3.0.0",
    "@polymer/paper-checkbox": "^3.0.0",
    "@polymer/paper-dialog": "^3.0.0",
    "@polymer/paper-dialog-scrollable": "^3.0.0",
    "@polymer/paper-icon-button": "^3.0.0",
    "@polymer/paper-input": "^3.2.1",
    "@polymer/paper-material": "^3.0.0",
    "@polymer/paper-radio-button": "^3.0.0",
    "@polymer/paper-radio-group": "^3.0.0",
    "@polymer/paper-spinner": "^3.0.0",
    "@polymer/paper-styles": "^3.0.0",
    "@polymer/paper-tooltip": "^3.0.0",
    "@polymer/polymer": "^3.4.1",
    "@rollup/plugin-node-resolve": "^8.1.0",
    "@stripe/stripe-js": "^1.11.0",
    "social-icon": "^1.2.1",
    "web-animations-js": "^2.3.1"
  },
  "devDependencies": {
    "@0xcda7a/empathy": "0.0.9",
    "@open-wc/building-rollup": "^1.4.2",
    "@open-wc/demoing-storybook": "^1.15.2",
    "@open-wc/eslint-config": "^2.1.0",
    "@open-wc/prettier-config": "^0.1.14",
    "@open-wc/testing": "^2.5.19",
    "@open-wc/testing-karma": "^3.4.6",
    "@open-wc/testing-karma-bs": "^1.3.82",
    "babel-eslint": "^10.1.0",
    "deepmerge": "^4.2.2",
    "es-dev-server": "^1.57.7",
    "eslint": "^6.1.0",
    "eslint-plugin-import": "^2.22.0",
    "husky": "^1.0.0",
    "lint-staged": "^13.1.0",
    "rimraf": "^3.0.2",
    "rollup": "^2.21.0",
    "wct-browser-legacy": "^1.0.1"
  },
  "scripts": {
    "lint:eslint": "eslint --ext .js,.html . --ignore-path .gitignore",
    "format:eslint": "eslint --ext .js,.html . --fix --ignore-path .gitignore",
    "lint:prettier": "prettier \"src/**/*.js\" --check --ignore-path .gitignore",
    "format:prettier": "prettier \"src/**/*.js\" --write --ignore-path .gitignore",
    "lint": "npm run lint:eslint && npm run lint:prettier",
    "format": "npm run format:eslint && npm run format:prettier",
    "test": "karma start --coverage",
    "test:watch": "karma start --auto-watch=true --single-run=false",
    "test:update-snapshots": "karma start --update-snapshots",
    "test:prune-snapshots": "karma start --prune-snapshots",
    "test:bs": "karma start karma.bs.config.js --coverage",
    "storybook": "start-storybook --node-resolve --watch --open",
    "storybook:build": "build-storybook",
    "start:build": "cd dist && es-dev-server --open",
    "build": "rimraf dist && rollup -c rollup.config.js && cd build/bundled && (ln -s /landing/images 2> /dev/null || true) && (ln -s /landing/styles 2> /dev/null || true) && cd -"
  },
  "eslintConfig": {
    "extends": [
      "@open-wc/eslint-config",
      "eslint-config-prettier"
    ],
    "rules": {
      "lit/no-legacy-template-syntax": [
        "off"
      ],
      "no-plusplus": [
        "off"
      ],
      "no-unused-vars": [
        "error",
        {
          "varsIgnorePattern": "_"
        }
      ]
    }
  },
  "prettier": "@open-wc/prettier-config",
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged"
    }
  },
  "lint-staged": {
    "src/*.js": [
      "eslint --fix",
      "prettier --write",
      "git add"
    ]
  }
}
